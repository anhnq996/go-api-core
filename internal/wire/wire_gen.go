// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"api-core/internal/app/auth"
	"api-core/internal/app/user"
	"api-core/internal/repositories"
	"api-core/internal/routes"
	"api-core/pkg/cache"
	"gorm.io/gorm"
)

// Injectors from wire.go:

// InitializeApp khởi tạo toàn bộ ứng dụng với database và cache
func InitializeApp(db *gorm.DB, cacheClient cache.Cache) (*routes.Controllers, error) {
	userRepository := repository.NewUserRepository(db)
	storageManager, err := ProvideStorageManager()
	if err != nil {
		return nil, err
	}
	service := user.NewService(userRepository, cacheClient, storageManager)
	handler := user.NewHandler(service)
	manager := ProvideJWTManager()
	blacklist := ProvideJWTBlacklist(cacheClient)
	authService := auth.NewService(userRepository, manager, blacklist)
	authHandler := auth.NewHandler(authService)
	cacheInterface := ProvideCacheInterface(cacheClient)
	controllers := routes.NewControllers(handler, authHandler, manager, blacklist, cacheInterface)
	return controllers, nil
}

// wire.go:

// ProvideCacheInterface provides cache interface for rate limiting
func ProvideCacheInterface(cacheClient cache.Cache) routes.CacheInterface {
	return cacheClient
}
